https://github.com/square/okhttp
OKHttp是一款高效的HTTP客户端，支持连接同一地址的链接共享同一个socket，通过连接池来减小响应延迟，
还有透明的GZIP压缩，请求缓存等优势，其核心主要有路由、连接协议、拦截器、代理、安全性认证、连接池以
及网络适配，拦截器主要是指添加，移除或者转换请求或者回应的头部信息

最大优点是:使用连接池缓存socket并保活(ping主网址 5分钟保活),以空间换取时间 (别的缓存)

1.可以设置缓存  2.拦截器
gradle依赖:   implementation("com.squareup.okhttp3:okhttp:4.1.1")
使用:
    get:
    OkHttpClient client = new OkHttpClient();

    String run(String url) throws IOException {
      Request request = new Request.Builder()
          .url(url)
          .build();
      try (Response response = client.newCall(request).execute()) {
        return response.body().string();
      }
    }

   post:
    public static final MediaType JSON
        = MediaType.get("application/json; charset=utf-8");
    OkHttpClient client = new OkHttpClient();
    String post(String url, String json) throws IOException {
      RequestBody body = RequestBody.create(json, JSON);
      Request request = new Request.Builder()
          .url(url)
          .post(body)
          .build();
      try (Response response = client.newCall(request).execute()) {
        return response.body().string();
      }
    }

//okhttp 封装类
https://github.com/hongyangAndroid/okhttputils

OkHttpClient (封装众多对象,是一个网络配置等) (封装了网络协议,连接池,读写时间超时,连接超时等)
Request (封装网址,请求头,请求体)
RealCall (封装了OkHttpClient和Request)
    Builder(封装信息的)
    请求调用(会挨个调用每个拦截器-->在ConnectInterceptor请求网络)  ConnectInterceptor-->intercept()
                      -->RealConnection 真正请求网络类(connectSocket)
